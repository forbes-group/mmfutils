# .github/workflows/tests.yml
# Based on
# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-python#using-multiple-python-versions
name: Tests

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
      fail-fast: false
        
    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v2
      # https://github.com/mamba-org/setup-micromamba
      with:
        micromamba-version: '1.4.8-0'
        environment-file: environment.yaml
        create-args: >-
          python=${{ matrix.python-version }}
        init-shell: bash
        cache-environment: true
        post-cleanup: 'all'
    - name: Install Linux Tools
      run: |        
        # https://github.com/actions/runner-images/issues/6894#issuecomment-1378055030
        sudo apt-get --option="APT::Acquire::Retries=3" update 
        #sudo apt-get --option="APT::Acquire::Retries=3" install ffmpeg libfftw3-dev
    - name: Install TeXLive
      run: |        
        #sudo apt-get --option="APT::Acquire::Retries=3" install texlive-full
        sudo apt-get --option="APT::Acquire::Retries=3" install `sudo apt --assume-no install texlive-full | \
          awk '/The following additional packages will be installed/{f=1;next} /Suggested packages/{f=0} f' | \
          tr ' ' '\n' | grep -vP 'doc$' | grep -vP 'texlive-lang' | grep -vP 'latex-cjk' | tr '\n' ' '`
      
    #- uses: actions/setup-python@v5
    #  with:
    #    python-version: ${{ matrix.python-version }}
    #    architecture: x64
    - name: Install nox
      run: |
        pipx install nox==2024.10.9
      shell: micromamba-shell {0}
    - name: Run nox
      run: |
        nox -s test-${{ matrix.python-version }}
      shell: micromamba-shell {0}
