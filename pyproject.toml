[project]
name = "mmfutils"
version = "0.7.0.dev0"
description = "Small set of utilities: containers and interfaces."
license = {text = "BSD-3-Clause"}
authors = [
  {name = "Michael McNeil Forbes", email = "michael.forbes+python@gmail.com>"},
]
readme = "description.md"
repository = "https://alum.mit.edu/www/mforbes/hg/forbes-group/mmfutils"
documentation = "http://mmfutils.readthedocs.org"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9,<3.13"
dependencies = [
  'zope.interface >= 5.5.2',
  'husl >= 4.0.3',
  'importlib-metadata >= 4.13.0; python_version < "3.8"',
  "uncertainties >= 3.2.2",
]

# Optional dependencies for testing, building the docs, etc.
[project.optional-dependencies]
test = [
    'pytest >= 7.2.2',
    'pytest-cov >= 4.0.0',
    'pytest-xdist >= 3.2.1',
    'mmf-setup >= 0.4.6',
    'mock >= 4.0.3',
    "persist >= 3.2.1",
    'psutil >= 5.9.4',
    'pytest-rerunfailures >= 11.1.2',
    'mmfutils[full,doc]',
]

doc = [
  'nbconvert >=7.2.7',
  'docutils >= 0.18.1',
  #docutils' >=0.20.1',
  # 'sphinx < 5.0.0'
  'sphinx >= 7.1.2; python_version < "3.9"',
  'sphinx >= 7.2.6; python_version >= "3.9"',
  'sphinx-rtd-theme >= 1.2.1',
  'sphinxcontrib-zopeext >= 0.4.3',
]

parallel = [
    'ipyparallel >= 8.4.1',
]

pyfftw = [
  "pyfftw>=0.14.0",
  # On my Mac OS ARM, I need to install from source for performance.
  # TODO: Not sure how to specify this on PyPI.
  #'pyFFTW >= 0.13.0; python_version <"3.8"',
  #'pyFFTW @ git+https://github.com/pyFFTW/pyFFTW.git#egg=master ; python_version > "3.8"',
]

numba = [
  "numba >= 0.56.4; python_version < '3.8'",
  "numba >= 0.60.0; python_version >= '3.8' and python_version < '3.13'",
]

perf = [
  'numexpr >= 2.8.1',
  "Cython>=3.0.11",
  'mmfutils[pyfftw,numba,parallel]',
]

# Support for jupyter notebooks with extensions.
notebook = [
    'black >= 23.12.1',
    'notebook < 7',
    'jupytext >= 1.16.1',
    'RISE >= 5.7.1',
    'jupyter-contrib-nbextensions >= 0.7.0',
    'nbclassic >= 1.0.0',
    'jupyter-console>=6.6.3',
    'jupyter-server<2',  # https://github.com/jupyter/notebook/issues/6702
    'ipywidgets>=8.1.5',
    'tqdm',
]

full = [
    "scipy >= 1.7.3; python_version < '3.8'",
    "scipy >= 1.10.1; python_version >= '3.8' and python_version < '3.9'",
    "scipy >= 1.13.1; python_version >= '3.9' and python_version < '3.10'",
    "scipy >= 1.14.1; python_version >= '3.10'",
    'matplotlib >= 3.5.3', #; python_version < "3.11"',
    'docutils >= 0.19',
    'mmfutils[perf]',
]

all = [
    "mmfutils[full,test,doc,notebook]",
]

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "ipython >= 7.34.0",
    "nbconvert >= 7.2.7",
    "pandoc >= 2.3",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

######################################################################
# PyTest
[tool.pytest.ini_options]
# Note: see the discussion in https://github.com/pytest-dev/pytest/issues/2042
# If your doctests are installed, then you should provide the module here (mmfutils)
# and add --pyargs to the options below.  Otherwise, you will get ImportMismatchError
# for the doctests.
testpaths = [ "mmfutils", "tests" ]
#testpaths = [ "src/mmfutils", "tests" ]
markers = [
    # mark test as a benchmark.  (Might be slow, or platform dependent)
    "bench",
    # mark test as slow.
    "slow",
]
addopts = [
    "--pyargs",
    "-m not bench",
    "--doctest-modules",
    "--cov",
    "--cov-report=html",
    "--cov-fail-under=80",
    "--no-cov-on-fail",
    "--cov-append",
    #"-x",
    #"--pdb",
    #"--flake8",  # Disable until https://github.com/tholo/pytest-flake8/issues/8
]

doctest_optionflags = [
    "ELLIPSIS",
    "NORMALIZE_WHITESPACE"
    ]

######################################################################
# Black
[tool.black]
exclude = '''
    /(
        \.git
      | \.hg
      | \.nox
      | \.venv
      | _build
      | build
      | dist
    )/
'''
